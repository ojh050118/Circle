on: [pull_request]
name: Continuous Integration
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  inspect-code:
      name: Code Quality
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install .NET 3.1.x LTS
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: "3.1.x"

        - name: Install .NET 6.0.x
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: "6.0.x"

        - name: Restore Tools
          run: dotnet tool restore

        - name: Restore Packages
          run: dotnet restore Circle.Desktop.slnf

        - name: Restore inspectcode cache
          uses: actions/cache@v3
          with:
            path: ${{ github.workspace }}/inspectcode
            key: inspectcode-${{ hashFiles('.config/dotnet-tools.json', '.github/workflows/ci.yml', 'Circle.sln*', 'Circle*.slnf', '.editorconfig', '.globalconfig', 'CodeAnalysis/*', '**/*.csproj', '**/*.props') }}

        - name: Dotnet code style
          run: dotnet build -c Debug -warnaserror Circle.Desktop.slnf -p:EnforceCodeStyleInBuild=true

        - name: CodeFileSanity
          run: |
            exit_code=0
            while read -r line; do
              if [[ ! -z "$line" ]]; then
                echo "::error::$line"
                exit_code=1
              fi
            done <<< $(dotnet codefilesanity)
            exit $exit_code

        - name: InspectCode
          run: dotnet jb inspectcode $(pwd)/Circle.Desktop.slnf --no-build --output="inspectcodereport.xml" --caches-home="inspectcode" --verbosity=WARN

        - name: NVika
          run: dotnet nvika parsereport "${{github.workspace}}/inspectcodereport.xml" --treatwarningsaserrors

  test:
    name: Test
    runs-on: ${{matrix.os.fullname}}
    env:
      CIRCLE_EXECUTION_MODE: ${{matrix.threadingMode}}
    strategy:
       fail-fast: false
       matrix:
          os:
            - { prettyname: Windows, fullname: windows-latest }
            - { prettyname: macOS, fullname: macos-latest }
          threadingMode: ['SingleThread', 'MultiThreaded']
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Compile
        run: dotnet build -c Debug -warnaserror Circle.Desktop.slnf

      - name: Test
        run: dotnet test $pwd/*.Tests/bin/Debug/*/*.Tests.dll --logger "trx;LogFileName=TestResults-${{matrix.os.prettyname}}-${{matrix.threadingMode}}.trx"
        shell: pwsh

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: Circle-test-results-${{matrix.os.prettyname}}-${{matrix.threadingMode}}
          path: ${{github.workspace}}/TestResults/TestResults-${{matrix.os.prettyname}}-${{matrix.threadingMode}}.trx

  build-only-android:
    name: Build only (Android)
    runs-on: windows-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Install .NET workloads
        run: dotnet workload install maui-android

      - name: Compile
        run: dotnet build -c Debug Circle.Android.slnf

  build-only-ios:
    name: Build only (iOS)
    runs-on: macos-13
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Xcode version
        shell: bash
        run: |
          sudo xcode-select -s "/Applications/Xcode_14.3.app"
          echo "MD_APPLE_SDK_ROOT=/Applications/Xcode_14.3.app" >> $GITHUB_ENV

      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Install .NET Workloads
        run: dotnet workload install maui-ios

      - name: Build
        run: dotnet build -c Debug Circle.iOS
